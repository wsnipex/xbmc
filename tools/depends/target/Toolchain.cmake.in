SET(OS "@platform_os@")
IF("${OS}" STREQUAL "linux" OR "${OS}" STREQUAL "android")
SET(CMAKE_SYSTEM_NAME Linux)
ENDIF()
IF("${OS}" STREQUAL "android")
  SET(ANDROID TRUE)
  SET(CORE_SYSTEM_NAME android)
ENDIF()
SET(CMAKE_SYSTEM_VERSION 1)

# specify the cross compiler
SET(CMAKE_C_COMPILER   @CC@)
SET(CMAKE_CXX_COMPILER @CXX@)
SET(CMAKE_AR @AR@ CACHE FILEPATH "Archiver")
SET(CMAKE_LINKER @LD@ CACHE FILEPATH "Linker")

# where is the target environment 
SET(CMAKE_FIND_ROOT_PATH  @prefix@/@deps_dir@ @use_toolchain@ @use_toolchain@/usr @use_sdk_path@ @use_sdk_path@/usr @use_toolchain@/sysroot/usr)
SET(CMAKE_LIBRARY_PATH @prefix@/@deps_dir@/lib:@use_toolchain@/usr/lib/@use_host@:@use_toolchain@/lib/@use_host@)

SET(CMAKE_C_FLAGS "@platform_cflags@ @platform_includes@ -I@prefix@/@deps_dir@/include")
SET(CMAKE_CXX_FLAGS "@platform_cxxflags@ @platform_includes@ -I@prefix@/@deps_dir@/include")
SET(CMAKE_CPP_FLAGS "@platform_cflags@ @platform_includes@ -I@prefix@/@deps_dir@/include")
SET(ENV{CFLAGS} ${CMAKE_C_FLAGS})
SET(ENV{CXXFLAGS} ${CMAKE_CXX_FLAGS})
SET(ENV{CPPFLAGS} ${CMAKE_CPP_FLAGS})
SET(ENV{LDFLAGS} "-L@prefix@/@deps_dir@/lib @platform_ldflags@")
# search for programs in the build host directories
SET(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
# for libraries and headers in the target directories
SET(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
SET(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
# some needed binaries
SET(PKG_CONFIG_EXECUTABLE @prefix@/@tool_dir@/bin/pkg-config)
SET(SWIG_EXECUTABLE @prefix@/@tool_dir@/bin/swig)
SET(SWIG_DIR @prefix@/@tool_dir@/share/swig/2.0.8)
SET(SDLIMAGE_LIBRARY @prefix@/@tool_dir@/lib)
SET(SDLIMAGE_INCLUDE_DIR @prefix@/@tool_dir@/include/SDL)
SET(AUTOCONF_CONFIG_SITE @prefix@/@tool_dir@/share/config.site)
SET(RPL "@prefix@/@tool_dir@/bin/python @prefix@/@tool_dir@/bin/rpl")
